import { type BaseOperationalTable } from '~/entities/operational-table/dto'

import { systemUser } from '../../database/seeds/users'

export const carsOperationalTable: BaseOperationalTable = {
  kn: 'cars',
  display: 'Автомобили',
  name: 'cars',
  nav: true,
  defaultView: 'table',
  description: 'Этот словарь был создан автоматически для примера',
  createdAt: new Date().toISOString(),
  updatedAt: new Date().toISOString(),
  createdById: systemUser.id,
  updatedById: systemUser.id,
  columns: [
    {
      id: 'id1',
      name: 'carsId',
      display: 'ID',
      type: 'string',
      index: true,
      unique: true,
      maxLength: 50,
    },
    {
      id: 'id2',
      name: 'brand',
      display: 'Фирма',
      type: 'string',
      index: true,
      maxLength: 50,
    },
    {
      id: 'id3',
      name: 'model',
      display: 'Модель',
      type: 'string',
      index: true,
      maxLength: 50,
    },
    {
      id: 'id4',
      name: 'year',
      display: 'Год выпуска',
      type: 'string',
      maxLength: 50,
    },
    {
      id: 'id5',
      name: 'employeesId',
      display: 'Водитель',
      type: 'string',
      maxLength: 50,
      relation: {
        // TODO делаю tableName вместо kn потому что так проще сидить
        tableName: 'employees',
        columnName: 'employeesId',
      },
    },
  ],
}

export const employeesOperationalTable: BaseOperationalTable = {
  kn: 'employees',
  display: 'Работники',
  name: 'employees',
  nav: true,
  defaultView: 'table',
  description: 'Этот словарь был создан автоматически для примера',
  createdAt: new Date().toISOString(),
  updatedAt: new Date().toISOString(),
  createdById: systemUser.id,
  updatedById: systemUser.id,
  columns: [
    {
      id: 'id1',
      name: 'employeesId',
      display: 'ID',
      type: 'string',
      unique: true,
      index: true,
      maxLength: 50,
    },
    {
      id: 'id2',
      name: 'firstName',
      display: 'Имя',
      type: 'string',
      index: true,
      maxLength: 50,
    },
    {
      id: 'id3',
      name: 'secondName',
      display: 'Фамилия',
      type: 'string',
      index: true,
      maxLength: 50,
    },
  ],
}

export const datasetOperationalTable: BaseOperationalTable = {
  kn: 'dataset',
  display: 'Эталонный датасет',
  name: 'dataset',
  nav: true,
  defaultView: 'table',
  description: 'Этот словарь был создан автоматически для примера',
  createdAt: new Date().toISOString(),
  updatedAt: new Date().toISOString(),
  createdById: systemUser.id,
  updatedById: systemUser.id,
  columns: [
    {
      id: 'id1',
      name: 'code',
      display: 'Код',
      type: 'string',
      unique: true,
      index: true,
      maxLength: 255,
    },
    {
      id: 'id2',
      name: 'name',
      display: 'Наименование',
      type: 'string',
      index: true,
      maxLength: 255,
    },
    {
      id: 'id3',
      name: 'ntd',
      display: 'НТД',
      type: 'string',
      index: true,
      maxLength: 255,
    },
    {
      id: 'id4',
      name: 'ntd_material',
      display: 'НТД на материал',
      type: 'string',
      index: true,
      maxLength: 255,
    },
    {
      id: 'id5',
      name: 'classificator_ens',
      display: 'Классификатор ЕНС',
      type: 'string',
      index: true,
      maxLength: 255,
    },
    {
      id: 'id6',
      name: 'classificator_ens_code',
      display: 'Классификатор ЕНС: код',
      type: 'string',
      index: true,
      maxLength: 255,
    },
    {
      id: 'id7',
      name: 'is_name_correct',
      display: 'Корректно ли сформировано наименование',
      type: 'string',
      index: true,
      maxLength: 255,
    },
  ],
}

export const medOperationalTable: BaseOperationalTable = {
  kn: 'med',
  display: 'Мед',
  name: 'med',
  nav: true,
  defaultView: 'table',
  description: 'Этот словарь был создан автоматически для примера',
  createdAt: new Date().toISOString(),
  updatedAt: new Date().toISOString(),
  createdById: systemUser.id,
  updatedById: systemUser.id,
  columns: [
    {
      id: 'id1',
      name: 'articul',
      display: 'Артикул',
      type: 'string',
      unique: true,
      index: true,
      maxLength: 25,
    },
    {
      id: 'id2',
      name: 'group',
      display: 'Группа',
      type: 'string',
      maxLength: 100,
    },
    {
      id: 'id3',
      name: 'name',
      display: 'Наименование',
      type: 'string',
      index: true,
      maxLength: 150,
    },
    {
      id: 'id4',
      name: 'price',
      display: 'Цена',
      type: 'float',
      maxLength: 50,
      decimalPlaces: 2,
      isNegativeAllowed: false,
    },
    {
      id: 'id5',
      name: 'source',
      display: 'Источник',
      type: 'string',
      index: true,
      maxLength: 150,
    },
    {
      id: 'id6',
      name: 'comment_1',
      display: 'Комментарий 1',
      type: 'string',
      index: false,
      maxLength: 255,
    },
    {
      id: 'id7',
      name: 'comment_2',
      display: 'Комментарий 2',
      type: 'string',
      index: false,
      maxLength: 255,
    },
    {
      id: 'id8',
      name: 'comment_3',
      display: 'Комментарий 3',
      type: 'string',
      index: false,
      maxLength: 255,
    },
  ],
}
